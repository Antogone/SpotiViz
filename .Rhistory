knitr::opts_chunk$set(echo = TRUE)
require(pacman)
p_load(tidyverse,
rvest,
rversions)
#First scrape all Pokemon names from this site
link <- "https://pokemondb.net/pokedex/all"
page <- read_html(link)
#Find appropriate html node to access to pull Pokemon names
pokemon <- page %>%
html_nodes(".ent-name") %>%
html_text() %>%
unique()
scrapeLink <- page %>%
html_nodes(".ent-name") %>%
html_attr("href") %>%
unique()
#Create tibble to store data
pokedexData <- tibble(Pokemon = pokemon) %>%
mutate(page = paste0("https://pokemondb.net", scrapeLink))
View(pokedexData)
#Create tibble with dummy observation
df <- tibble(Pokemon = "1", PokedexEntry = "2")
#Iterate through all the Pokedex entries
for(i in 1:nrow(pokedexData)) {
link2 <- as.character(unlist(pokedexData[i,2]))
mon <- read_html(link2)
entry <- mon %>%
html_nodes("td.cell-med-text") %>%
html_text() %>%
unique()
monName <- rep(as.character(unlist(pokedexData[i,1])), length(entry))
bind <- bind_cols(monName, entry) %>%
set_names("Pokemon", "PokedexEntry")
df <- df %>% add_row(bind)
}
#Remove dummy observation
df <- df[-1,]
write.csv(df, "PokedexEntries.csv")
knitr::opts_chunk$set(echo = TRUE)
require(pacman)
p_load(tidyverse,
tidytext,
ggplot2,
textdata,
wordcloud,
keras,
tokenizers,
purrr,
plotly)
setwd("C:/Users/youid/Dropbox/Professional/Pokemon")
setwd("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz")
load("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_final.RData")
shiny::runApp()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(spotifyr)
library(ggjoy)
library(magick)
library(RColorBrewer)
id <- '96624790ed0649499af41f4f7b7c3243'
secret <- 'b8f3d44cd2db4f248516acc58cd52f0b'
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
get_my_top_artists_or_tracks(type = 'artists', time_range = 'long_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_long
get_my_top_artists_or_tracks(type = 'artists', time_range = 'medium_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_mid
liste_anto_long %>%
bind_rows(liste_anto_mid) %>%
distinct() %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images)-> liste_artiste
View(liste_anto_mid)
View(liste_artiste)
View(liste_anto_long)
View(liste_anto_mid)
View(liste_anto_long)
liste_artiste %>%
filter((name %in% c("Louane","Angèle","Lizzo","Dua Lipa","Suzane","Loïc Nottet" ,"Therapie TAXI"))) -> liste_artiste
liste_anto_long %>%
bind_rows(liste_anto_mid) %>%
distinct() %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images)-> liste_artiste
rm(liste_anto_long,liste_anto_mid)
liste_artiste %>%
filter((name %in% c("Louane","Angèle","Lizzo","Dua Lipa","Suzane","Loïc Nottet" ,"Therapie TAXI"))) -> liste_artiste
View(liste_artiste)
get_data <- function(id,nom){
get_artist_albums(id) %>%
select(album_group,album_type,artists,id,images,name,release_date,total_tracks,type,external_urls.spotify) %>%
group_by(toupper(name)) %>%
arrange(desc(release_date),desc(total_tracks)) %>%
mutate(ligne = row_number()) %>%
filter(ligne == 1) %>%
ungroup %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images,-ligne) -> albums
get_artist_audio_features(id) %>%
select(-album_release_date_precision,-analysis_url,-available_markets,-track_href,-is_local,-track_preview_url,-track_uri) %>%
rowwise() %>%
mutate(img = album_images[1,2]) %>%
select(-album_images) -> discographie
get_related_artists(id) %>%
select(-href,-uri,-followers.href) %>%
rowwise() %>%
mutate(img = images[1,2],
genres = paste(genres, collapse = ', ')) %>%
select(-images)-> related
list("albums" = albums,"discographie" = discographie, "related" = related)
}
for (row in 1:nrow(liste_artiste)) {
nom <- liste_artiste[row, "name"] %>% as.character()
id_art  <- liste_artiste[row, "id"] %>% as.character()
print(nom)
get_data(id_art,nom) -> data_temp
if(exists("albums")){
albums %>%
bind_rows(data_temp$albums) -> albums
}else{
data_temp$albums -> albums
}
if(exists("discographie")){
discographie %>%
bind_rows(data_temp$discographie) -> discographie
}else{
data_temp$discographie -> discographie
}
if(exists("related")){
related %>%
bind_rows(data_temp$related %>%
mutate(relative = id_art)) -> related
}else{
data_temp$related %>%
mutate(relative = id_art) -> related
}
}
View(albums)
discographie %>%
select(artist_name,artist_id,album_id,album_name,img,album_release_date) %>%
mutate(album_url = str_c("https://open.spotify.com/album/",album_id)) %>%
group_by(artist_id,album_id) %>% distinct() %>% ungroup -> pre_aes
pre_aes %>%
arrange(desc(ymd(album_release_date))) %>%
group_by(artist_id,toupper(album_name)) %>%
mutate(ligne = row_number()) %>%
filter(ligne ==1) %>% ungroup  %>% select(-ligne,-`toupper(album_name)`) %>% arrange(artist_name)-> albums_aes
View(albums_aes)
rm(pre_aes)
rm(data_temp,id_art,nom,row,secret,access_token,id,i)
save.image("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_wckd.RData")
runApp()
rm('get_data')
runApp()
id <- '96624790ed0649499af41f4f7b7c3243'
secret <- 'b8f3d44cd2db4f248516acc58cd52f0b'
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
get_my_top_artists_or_tracks(type = 'artists', time_range = 'long_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_long
get_my_top_artists_or_tracks(type = 'artists', time_range = 'medium_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_mid
liste_anto_long %>%
bind_rows(liste_anto_mid) %>%
distinct() %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images)-> liste_artiste
get_data <- function(id,nom){
get_artist_albums(id) %>%
select(album_group,album_type,artists,id,images,name,release_date,total_tracks,type,external_urls.spotify) %>%
group_by(toupper(name)) %>%
arrange(desc(release_date),desc(total_tracks)) %>%
mutate(ligne = row_number()) %>%
filter(ligne == 1) %>%
ungroup %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images,-ligne) -> albums
get_artist_audio_features(id) %>%
select(-album_release_date_precision,-analysis_url,-available_markets,-track_href,-is_local,-track_preview_url,-track_uri) %>%
rowwise() %>%
mutate(img = album_images[1,2]) %>%
select(-album_images) -> discographie
get_related_artists(id) %>%
select(-href,-uri,-followers.href) %>%
rowwise() %>%
mutate(img = images[1,2],
genres = paste(genres, collapse = ', ')) %>%
select(-images)-> related
list("albums" = albums,"discographie" = discographie, "related" = related)
}
for (row in 1:nrow(liste_artiste)) {
nom <- liste_artiste[row, "name"] %>% as.character()
id_art  <- liste_artiste[row, "id"] %>% as.character()
print(nom)
get_data(id_art,nom) -> data_temp
if(exists("albums")){
albums %>%
bind_rows(data_temp$albums) -> albums
}else{
data_temp$albums -> albums
}
if(exists("discographie")){
discographie %>%
bind_rows(data_temp$discographie) -> discographie
}else{
data_temp$discographie -> discographie
}
if(exists("related")){
related %>%
bind_rows(data_temp$related %>%
mutate(relative = id_art)) -> related
}else{
data_temp$related %>%
mutate(relative = id_art) -> related
}
}
View(albums)
View(liste_artiste)
discographie %>%
select(artist_name,artist_id,album_id,album_name,img,album_release_date) %>%
mutate(album_url = str_c("https://open.spotify.com/album/",album_id)) %>%
group_by(artist_id,album_id) %>% distinct() %>% ungroup -> pre_aes
pre_aes %>%
arrange(desc(ymd(album_release_date))) %>%
group_by(artist_id,toupper(album_name)) %>%
mutate(ligne = row_number()) %>%
filter(ligne ==1) %>% ungroup  %>% select(-ligne,-`toupper(album_name)`) %>% arrange(artist_name)-> albums_aes
rm(pre_aes)
rm(data_temp,id_art,nom,row,secret,access_token,id,i)
rm(liste_anto_long,liste_anto_mid)
View(related)
save.image("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_full.RData")
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
library(spotifyr)
library(ggjoy)
library(magick)
library(RColorBrewer)
id <- '96624790ed0649499af41f4f7b7c3243'
secret <- 'b8f3d44cd2db4f248516acc58cd52f0b'
Sys.setenv(SPOTIFY_CLIENT_ID = id)
Sys.setenv(SPOTIFY_CLIENT_SECRET = secret)
access_token <- get_spotify_access_token()
get_my_top_artists_or_tracks(type = 'artists', time_range = 'long_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_long
get_my_top_artists_or_tracks(type = 'artists', time_range = 'medium_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_mid
get_my_top_artists_or_tracks(type = 'artists', time_range = 'short_term') %>%
select(name, popularity,genres,id,images,followers.total) %>%
rowwise %>%
mutate(genres = paste(genres, collapse = ', ')) %>%
ungroup -> liste_anto_short
liste_anto_long %>%
bind_rows(liste_anto_mid) %>%
bind_rows(liste_anto_short)
distinct() %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images)-> liste_artiste
liste_anto_long %>%
bind_rows(liste_anto_mid) %>%
bind_rows(liste_anto_short) %>%
distinct() %>%
rowwise() %>%
mutate(img = images[1,2]) %>%
select(-images)-> liste_artiste
rm(liste_anto_long,liste_anto_mid,liste_anto_short)
View(liste_artiste)
load("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_wckd.RData")
runApp()
runApp()
load("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_wckd.RData")
runApp()
data_ttl <- discographie %>% group_by(artist_name,artist_id) %>%
select(danceability,energy,speechiness,acousticness,valence,instrumentalness) %>%
mutate_all(~median(.)) %>% distinct()
View(data_ttl)
data_ttl %>%
filter(artist_name== input$artist,track_name==input$ttl) %>%
ungroup %>%
rename("group" = "track_name") %>%
select(-1,-2,-4)
data_ttl <- discographie %>%
select(artist_name,track_name,danceability,energy,speechiness,acousticness,valence,instrumentalness)
View(data_ttl)
data_ttl <- discographie %>%
select(artist_name,track_name,danceability,energy,speechiness,acousticness,valence,instrumentalness) %>% distinct
View(data_ttl)
View(data_ttl)
runApp()
View(related)
View(albums_aes)
View(liste_artiste)
View(related)
load("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_wckd.RData")
View(liste_artiste)
View(related)
View(liste_artiste)
View(related)
View(related)
runApp()
runApp()
sub_alb <<- reactive(related %>% filter(artist_name == input$select))
runApp()
View(liste_artiste)
runApp()
View(related)
View(related)
View(liste_artiste)
runApp()
load("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_full.RData")
runApp()
load("~/Desktop/M2SPB/VISUALISATION/PROJET/SpotiViz/data_final.RData")
runApp()
